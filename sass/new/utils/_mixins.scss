/*
This mixin is for mobile responsive media query

how to use:

.hello-world {
    ...style

    @include respond(mobile-lg){
        ...style for mobile-lg
    }

}

// Em to PX and corressponding mobile model

big-desktop : 1940px - upward
desktop : 1264px - 1940px
laptop : 1000px - 1264px (iPad Pro)
laptop-s : 900px - 1000px
tab-land : 768px - 900px
tab-port : 600px - 768px (iPad)
mobile-lg : 375px - 600px (pixel 2 XL or iphone 6/7/8 Plus or surface duo)
mobile-m :  320px - 375px (Moto G4 or Galaxy S5 or iphone x or iPhone 6/7/8)
mobile-s : 0 - 320px (iphone 5/se or Galaxy fold)

*/

@mixin respond($screen-size) {
  // 0 to 320px
  @if $screen-size == mobile-s {
    @media (max-width: 320px) {
      @content;
    }
  }
  // 320px to 375px
  @if $screen-size == mobile-m {
    @media (max-width: 375px) {
      @content;
    }
  }

  // 375px to 500px
  @if $screen-size == mobile-ms {
    @media (max-width: 500px) {
      @content;
    }
  }

  // 500px to 600px
  @if $screen-size == mobile-lg {
    @media (max-width: 600px) {
      @content;
    }
  }

  // 600px to 768px
  @if $screen-size == tab-port {
    @media (max-width: 768px) {
      @content;
    }
  }

  // 768px to 900px
  @if $screen-size == tab-land {
    @media (max-width: 900px) {
      @content;
    }
  }

  // 900px to 1000px
  @if $screen-size == laptop-s {
    @media (max-width: 1000px) {
      @content;
    }
  }

  // 1000px to 1264px
  @if $screen-size == laptop {
    @media (max-width: 1264px) {
      @content;
    }
  }
  // 1264px to 1366px
  @if $screen-size == desktop-s {
    @media (max-width: 1366px) {
      @content;
    }
  }

  // 1366px to 1440px
  @if $screen-size == desktop-wide {
    @media (max-width: 1440px) {
      @content;
    }
  }
  // 1440px to 1940px
  @if $screen-size == desktop {
    @media (max-width: 1940px) {
      @content;
    }
  }
  // 1940px to upward
  @if $screen-size == big-desktop {
    @media (min-width: 1940px) {
      @content;
    }
  }
}

/* if you want add new breakpoint just call this custom-respond

.hello {
  font-size: 12px;
  @include custom-respond(358px)  {
    font-size: 50px;
  }
*/

@mixin custom-respond($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin hoverImage {
  transform: scale(1.05);
  padding-left: 5px;
  position: relative;
  border: 3px solid $color-lightgray3 !important;
  & .card--search__title {
    color: $color-black;
  }
}

@mixin hoverText {
  position: relative;
  transform: scale(1.03);
  font-weight: 700;
  color: $color-darkblue !important;
  left: 4px;
}

@mixin transition {
  transition: all 0.3s ease;
}

@mixin pseudoImage($psuedo, $img) {
  &::#{$psuedo} {
    position: absolute;
    display: block;
    content: "";
    background-image: $img;
    background-size: contain;
    background-repeat: no-repeat;
    pointer-events: none;
    @content;
  }
}

@mixin buttonIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  right: -15px;
  top: -250%;
  background: $color-red;
  height: 24px;
  padding: 8px 5px;
  border-radius: 8px;
  font-size: 12px;
  color: $color-white;

  @include respond(mobile-lg) {
    right: -10px;
    height: auto;
  }
}

@mixin square-size($size) {
  height: $size !important;
  min-height: $size !important;
  width: $size !important;
  min-width: $size !important;
}